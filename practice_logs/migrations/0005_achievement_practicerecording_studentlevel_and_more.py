# Generated by Django 4.2.22 on 2025-06-11 02:24

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import practice_logs.models.recordings


class Migration(migrations.Migration):

    dependencies = [
        ('practice_logs', '0004_practicelog_practice_lo_student_0cbd3f_idx'),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='成就徽章的顯示名稱', max_length=100, verbose_name='徽章名稱')),
                ('description', models.TextField(help_text='詳細描述如何獲得此徽章', verbose_name='徽章描述')),
                ('icon', models.CharField(default='🏆', help_text='Font Awesome圖示類名或emoji', max_length=50, verbose_name='徽章圖示')),
                ('category', models.CharField(choices=[('persistence', '堅持類'), ('quality', '品質類'), ('milestone', '里程碑類'), ('skill', '技能類'), ('challenge', '挑戰類')], max_length=20, verbose_name='徽章類別')),
                ('requirement_type', models.CharField(choices=[('consecutive_days', '連續練習天數'), ('total_hours', '總練習時間'), ('average_rating', '平均評分'), ('focus_hours', '專項練習時間'), ('piece_mastery', '曲目掌握'), ('challenge_complete', '挑戰完成'), ('total_sessions', '總練習次數'), ('week_consistency', '週練習一致性'), ('improvement_rate', '進步速度')], max_length=30, verbose_name='達成條件類型')),
                ('requirement_value', models.FloatField(help_text='需要達到的數值（如：7天、100小時、4.5分等）', verbose_name='達成條件數值')),
                ('points', models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(1)], verbose_name='獲得積分')),
                ('rarity', models.CharField(choices=[('common', '普通'), ('rare', '稀有'), ('epic', '史詩'), ('legendary', '傳奇')], default='common', max_length=10, verbose_name='稀有度')),
                ('is_active', models.BooleanField(default=True, help_text='停用的徽章不會被檢查或獲得', verbose_name='是否啟用')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='創建時間')),
            ],
            options={
                'verbose_name': '成就徽章',
                'verbose_name_plural': '成就徽章',
                'ordering': ['category', 'requirement_value'],
            },
        ),
        migrations.CreateModel(
            name='PracticeRecording',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_name', models.CharField(db_index=True, max_length=100, verbose_name='學生姓名')),
                ('piece', models.CharField(help_text='演奏的樂曲名稱', max_length=200, verbose_name='演奏曲目')),
                ('recording_type', models.CharField(choices=[('audio', '音頻'), ('video', '影片')], max_length=10, verbose_name='錄音類型')),
                ('file_path', models.FileField(upload_to=practice_logs.models.recordings.recording_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp3', 'wav', 'ogg', 'mp4', 'avi', 'mov', 'webm'])], verbose_name='檔案路徑')),
                ('thumbnail', models.ImageField(blank=True, help_text='影片縮圖或音頻波形圖', null=True, upload_to='recordings/thumbnails/', verbose_name='縮圖')),
                ('upload_date', models.DateTimeField(auto_now_add=True, verbose_name='上傳時間')),
                ('week_number', models.PositiveIntegerField(help_text='記錄這是第幾週的練習錄音', verbose_name='第幾週錄音')),
                ('duration', models.PositiveIntegerField(blank=True, help_text='錄音或影片的時長', null=True, verbose_name='時長（秒）')),
                ('file_size', models.PositiveIntegerField(blank=True, null=True, verbose_name='檔案大小（bytes）')),
                ('notes', models.TextField(blank=True, help_text='關於這次錄音的備註', verbose_name='練習筆記')),
                ('self_rating', models.PositiveIntegerField(help_text='學生對自己演奏的評分（1-5分）', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='自我評分')),
                ('teacher_score', models.FloatField(blank=True, help_text='教師給出的專業評分', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='教師評分')),
                ('teacher_feedback', models.TextField(blank=True, help_text='教師的詳細回饋與建議', verbose_name='教師回饋')),
                ('is_featured', models.BooleanField(default=False, help_text='是否在展示頁面中突出顯示', verbose_name='是否為精選')),
                ('is_public', models.BooleanField(default=False, help_text='是否允許其他人查看', verbose_name='是否公開')),
                ('status', models.CharField(choices=[('processing', '處理中'), ('ready', '就緒'), ('failed', '失敗'), ('archived', '已歸檔')], default='processing', max_length=20, verbose_name='處理狀態')),
                ('view_count', models.PositiveIntegerField(default=0, verbose_name='觀看次數')),
            ],
            options={
                'verbose_name': '練習錄音',
                'verbose_name_plural': '練習錄音',
                'ordering': ['-upload_date'],
            },
        ),
        migrations.CreateModel(
            name='StudentLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_name', models.CharField(max_length=100, unique=True, verbose_name='學生姓名')),
                ('level', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='等級')),
                ('total_points', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='總積分')),
                ('current_experience', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='當前經驗值')),
                ('current_streak', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='連續練習天數')),
                ('longest_streak', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='最長連續天數')),
                ('title', models.CharField(choices=[('初學者', '初學者'), ('入門學徒', '入門學徒'), ('練習新手', '練習新手'), ('音律探索者', '音律探索者'), ('弦音學者', '弦音學者'), ('旋律織造者', '旋律織造者'), ('和聲大師', '和聲大師'), ('音樂詩人', '音樂詩人'), ('琴弦聖手', '琴弦聖手'), ('樂章傳奇', '樂章傳奇')], default='初學者', max_length=50, verbose_name='稱號')),
                ('last_practice_date', models.DateField(blank=True, null=True, verbose_name='最後練習日期')),
                ('total_practice_time', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='總練習時間（分鐘）')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='創建時間')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='更新時間')),
            ],
            options={
                'verbose_name': '學生等級',
                'verbose_name_plural': '學生等級',
                'ordering': ['-level', '-total_points'],
            },
        ),
        migrations.CreateModel(
            name='WeeklyChallenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_name', models.CharField(db_index=True, max_length=100, verbose_name='學生姓名')),
                ('week_start', models.DateField(help_text='挑戰週期的開始日期（週一）', verbose_name='週開始日期')),
                ('challenge_type', models.CharField(choices=[('practice_time', '練習時間挑戰'), ('consecutive_days', '連續練習挑戰'), ('skill_focus', '技巧專注挑戰'), ('piece_mastery', '曲目精通挑戰'), ('rating_improvement', '評分提升挑戰'), ('recording_upload', '錄音上傳挑戰'), ('variety_practice', '多樣化練習挑戰')], max_length=30, verbose_name='挑戰類型')),
                ('title', models.CharField(max_length=200, verbose_name='挑戰標題')),
                ('description', models.TextField(help_text='詳細描述挑戰的要求和規則', verbose_name='挑戰描述')),
                ('target_value', models.FloatField(help_text='需要達到的目標值（如：120分鐘、5天、3.5分等）', verbose_name='目標數值')),
                ('current_progress', models.FloatField(default=0, help_text='目前已達成的數值', verbose_name='當前進度')),
                ('is_completed', models.BooleanField(default=False, verbose_name='是否完成')),
                ('completion_date', models.DateTimeField(blank=True, null=True, verbose_name='完成時間')),
                ('points_reward', models.IntegerField(default=50, validators=[django.core.validators.MinValueValidator(1)], verbose_name='獎勵積分')),
                ('bonus_points', models.IntegerField(default=0, help_text='提前完成或超額完成的額外獎勵', verbose_name='額外獎勵積分')),
                ('created_by', models.CharField(choices=[('auto', '自動生成'), ('teacher', '教師創建'), ('system', '系統推薦')], default='auto', max_length=20, verbose_name='創建者')),
                ('difficulty', models.CharField(choices=[('easy', '簡單'), ('medium', '中等'), ('hard', '困難'), ('expert', '專家')], default='medium', max_length=10, verbose_name='難度')),
                ('status', models.CharField(choices=[('active', '進行中'), ('completed', '已完成'), ('failed', '已失敗'), ('expired', '已過期')], default='active', max_length=20, verbose_name='狀態')),
                ('priority', models.IntegerField(default=1, help_text='數字越大優先級越高', verbose_name='優先級')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='創建時間')),
            ],
            options={
                'verbose_name': '每週挑戰',
                'verbose_name_plural': '每週挑戰',
                'ordering': ['-priority', '-week_start'],
                'indexes': [models.Index(fields=['student_name', 'week_start'], name='practice_lo_student_00952e_idx'), models.Index(fields=['status', 'week_start'], name='practice_lo_status_6e6ca6_idx'), models.Index(fields=['challenge_type'], name='practice_lo_challen_e066e5_idx')],
                'unique_together': {('student_name', 'week_start', 'challenge_type')},
            },
        ),
        migrations.CreateModel(
            name='StudentGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_name', models.CharField(db_index=True, max_length=100, verbose_name='學生姓名')),
                ('goal_type', models.CharField(choices=[('weekly', '週目標'), ('monthly', '月目標'), ('semester', '學期目標'), ('yearly', '年度目標'), ('custom', '自定義目標')], max_length=20, verbose_name='目標類型')),
                ('title', models.CharField(max_length=200, verbose_name='目標標題')),
                ('description', models.TextField(verbose_name='目標描述')),
                ('target_date', models.DateField(verbose_name='目標達成日期')),
                ('progress_metric', models.CharField(help_text='如：練習時間、掌握曲目數、評分等', max_length=50, verbose_name='進度指標')),
                ('target_value', models.FloatField(verbose_name='目標數值')),
                ('current_value', models.FloatField(default=0, verbose_name='當前數值')),
                ('status', models.CharField(choices=[('active', '進行中'), ('achieved', '已達成'), ('paused', '暫停'), ('cancelled', '已取消')], default='active', max_length=20, verbose_name='狀態')),
                ('is_public', models.BooleanField(default=False, help_text='是否在展示頁面中顯示', verbose_name='是否公開')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='創建時間')),
                ('achieved_date', models.DateTimeField(blank=True, null=True, verbose_name='達成時間')),
            ],
            options={
                'verbose_name': '學生目標',
                'verbose_name_plural': '學生目標',
                'ordering': ['-created_date'],
                'indexes': [models.Index(fields=['student_name', 'status'], name='practice_lo_student_20dc06_idx'), models.Index(fields=['target_date'], name='practice_lo_target__a3a1b7_idx'), models.Index(fields=['goal_type'], name='practice_lo_goal_ty_c2d664_idx')],
            },
        ),
        migrations.CreateModel(
            name='StudentAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_name', models.CharField(db_index=True, max_length=100, verbose_name='學生姓名')),
                ('earned_date', models.DateTimeField(auto_now_add=True, verbose_name='獲得時間')),
                ('progress', models.FloatField(default=0, help_text='當前達成進度，0-100', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='進度百分比')),
                ('is_earned', models.BooleanField(default=False, verbose_name='是否已獲得')),
                ('notification_sent', models.BooleanField(default=False, verbose_name='是否已發送通知')),
                ('achievement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='practice_logs.achievement', verbose_name='成就')),
            ],
            options={
                'verbose_name': '學生成就',
                'verbose_name_plural': '學生成就',
                'ordering': ['-earned_date'],
            },
        ),
        migrations.CreateModel(
            name='RecordingProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_name', models.CharField(db_index=True, max_length=100, verbose_name='學生姓名')),
                ('piece', models.CharField(max_length=200, verbose_name='曲目')),
                ('improvement_score', models.FloatField(blank=True, help_text='計算得出的進步程度評分', null=True, verbose_name='進步分數')),
                ('total_recordings', models.PositiveIntegerField(default=0, verbose_name='總錄音數')),
                ('weeks_span', models.PositiveIntegerField(default=0, verbose_name='跨越週數')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='創建時間')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='更新時間')),
                ('first_recording', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_as_first', to='practice_logs.practicerecording', verbose_name='第一次錄音')),
                ('latest_recording', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_as_latest', to='practice_logs.practicerecording', verbose_name='最新錄音')),
            ],
            options={
                'verbose_name': '錄音進步追蹤',
                'verbose_name_plural': '錄音進步追蹤',
                'ordering': ['-updated_date'],
            },
        ),
        migrations.CreateModel(
            name='RecordingComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commenter_type', models.CharField(choices=[('teacher', '教師'), ('parent', '家長'), ('self', '自己'), ('peer', '同伴'), ('system', '系統')], max_length=10, verbose_name='評論者類型')),
                ('commenter_name', models.CharField(max_length=100, verbose_name='評論者姓名')),
                ('comment', models.TextField(verbose_name='評論內容')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='評論時間')),
                ('rating', models.PositiveIntegerField(blank=True, help_text='可選的評分（1-5分）', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='評分')),
                ('is_encouraging', models.BooleanField(default=True, help_text='標記為正面鼓勵的評論', verbose_name='是否為鼓勵性評論')),
                ('is_pinned', models.BooleanField(default=False, help_text='重要評論可以置頂顯示', verbose_name='是否置頂')),
                ('likes_count', models.PositiveIntegerField(default=0, verbose_name='點讚數')),
                ('recording', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='practice_logs.practicerecording', verbose_name='錄音')),
                ('reply_to', models.ForeignKey(blank=True, help_text='如果是回覆其他評論', null=True, on_delete=django.db.models.deletion.CASCADE, to='practice_logs.recordingcomment', verbose_name='回覆給')),
            ],
            options={
                'verbose_name': '錄音評論',
                'verbose_name_plural': '錄音評論',
                'ordering': ['-is_pinned', '-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='PracticeTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_name', models.CharField(db_index=True, max_length=100, verbose_name='學生姓名')),
                ('task_type', models.CharField(choices=[('focus_practice', '專項練習'), ('time_goal', '時間目標'), ('piece_mastery', '曲目掌握'), ('technique_improvement', '技巧改進'), ('recording_upload', '錄音上傳'), ('theory_study', '樂理學習'), ('sight_reading', '視奏練習'), ('memorization', '背譜練習')], max_length=30, verbose_name='任務類型')),
                ('title', models.CharField(max_length=200, verbose_name='任務標題')),
                ('description', models.TextField(help_text='詳細描述任務要求和完成標準', verbose_name='任務描述')),
                ('due_date', models.DateField(verbose_name='截止日期')),
                ('estimated_minutes', models.PositiveIntegerField(blank=True, null=True, verbose_name='預估所需時間（分鐘）')),
                ('is_completed', models.BooleanField(default=False, verbose_name='是否完成')),
                ('completion_date', models.DateTimeField(blank=True, null=True, verbose_name='完成時間')),
                ('completion_notes', models.TextField(blank=True, help_text='學生完成任務時的心得或備註', verbose_name='完成備註')),
                ('priority', models.CharField(choices=[('low', '低'), ('medium', '中'), ('high', '高'), ('urgent', '緊急')], default='medium', max_length=10, verbose_name='優先級')),
                ('status', models.CharField(choices=[('pending', '待開始'), ('in_progress', '進行中'), ('completed', '已完成'), ('overdue', '已逾期'), ('cancelled', '已取消')], default='pending', max_length=20, verbose_name='狀態')),
                ('points_reward', models.IntegerField(default=25, validators=[django.core.validators.MinValueValidator(1)], verbose_name='獎勵積分')),
                ('assigned_by', models.CharField(default='system', help_text='任務的分配者（教師姓名或system）', max_length=100, verbose_name='分配者')),
                ('related_piece', models.CharField(blank=True, help_text='如果任務與特定曲目相關', max_length=200, verbose_name='相關曲目')),
                ('related_focus', models.CharField(blank=True, max_length=20, verbose_name='相關練習重點')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='創建時間')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='更新時間')),
            ],
            options={
                'verbose_name': '練習任務',
                'verbose_name_plural': '練習任務',
                'ordering': ['-priority', 'due_date', '-created_date'],
                'indexes': [models.Index(fields=['student_name', 'status'], name='practice_lo_student_4807f6_idx'), models.Index(fields=['due_date', 'is_completed'], name='practice_lo_due_dat_658e00_idx'), models.Index(fields=['task_type'], name='practice_lo_task_ty_555b4b_idx'), models.Index(fields=['priority', 'due_date'], name='practice_lo_priorit_6e5cb1_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='practicerecording',
            index=models.Index(fields=['student_name', 'upload_date'], name='practice_lo_student_363589_idx'),
        ),
        migrations.AddIndex(
            model_name='practicerecording',
            index=models.Index(fields=['piece', 'week_number'], name='practice_lo_piece_ffbc5a_idx'),
        ),
        migrations.AddIndex(
            model_name='practicerecording',
            index=models.Index(fields=['is_featured', 'is_public'], name='practice_lo_is_feat_ba70c3_idx'),
        ),
        migrations.AddIndex(
            model_name='practicerecording',
            index=models.Index(fields=['status'], name='practice_lo_status_271acb_idx'),
        ),
        migrations.AddIndex(
            model_name='achievement',
            index=models.Index(fields=['category', 'is_active'], name='practice_lo_categor_bf7362_idx'),
        ),
        migrations.AddIndex(
            model_name='achievement',
            index=models.Index(fields=['requirement_type'], name='practice_lo_require_4546ce_idx'),
        ),
        migrations.AddIndex(
            model_name='studentachievement',
            index=models.Index(fields=['student_name', 'is_earned'], name='practice_lo_student_1665b3_idx'),
        ),
        migrations.AddIndex(
            model_name='studentachievement',
            index=models.Index(fields=['earned_date'], name='practice_lo_earned__2c3967_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='studentachievement',
            unique_together={('student_name', 'achievement')},
        ),
        migrations.AlterUniqueTogether(
            name='recordingprogress',
            unique_together={('student_name', 'piece')},
        ),
        migrations.AddIndex(
            model_name='recordingcomment',
            index=models.Index(fields=['recording', 'timestamp'], name='practice_lo_recordi_f9d85d_idx'),
        ),
        migrations.AddIndex(
            model_name='recordingcomment',
            index=models.Index(fields=['commenter_type'], name='practice_lo_comment_e6c41a_idx'),
        ),
        migrations.AddIndex(
            model_name='recordingcomment',
            index=models.Index(fields=['is_pinned', 'is_encouraging'], name='practice_lo_is_pinn_4e1cb7_idx'),
        ),
    ]
